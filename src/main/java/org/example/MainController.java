package org.example;

import com.fasterxml.jackson.databind.util.JSONPObject;
import com.google.gson.Gson;
import org.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@Controller	// This means that this class is a Controller
//@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
			   // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

	private List<Curso> curso;


	@PostMapping(path="/add") // Map ONLY POST Requests
	public @ResponseBody String addNewUser (@RequestParam String curso
			, @RequestParam String tema) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		Curso n = new Curso();
		n.setCurso(curso);
		n.setTema(tema);
		userRepository.save(n);
		return "Saved";
	}

	@GetMapping(path="/all")
	//public @ResponseBody Iterable<Curso> getAllUsers() {
	public @ResponseBody String getAllUsers() {
	//public ResponseBody String getAllUsers() {
		// This returns a JSON or XML with the users


		curso = (List<Curso>) userRepository.findAll();

		Gson gson = new Gson();
		String jsonString = gson.toJson(curso);

		//	return 	userRepository.findAll();
		//	return "{\"status\":\"Saved\"}";

		//return	"\"+userRepository.findAll();
		return jsonString.toString();
	}

	
	@GetMapping(path="/plantilla")
	public String getUsers() {
		// This returns a JSON or XML with the users
		return "raiz";
	}
	
	
}
